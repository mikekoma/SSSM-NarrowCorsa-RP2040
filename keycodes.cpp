#include "keycodes.h"

const char* keycodes_txt[] = {
  "KC_NONE", //0x00
  "0x01",
  "0x02",
  "0x03",
  "0x04",
  "0x05",
  "0x06",
  "0x07",
  "0x08",
  "0x09",
  "0x0A",
  "0x0B",
  "0x0C",
  "0x0D",
  "0x0E",
  "0x0F",
  "0x10",
  "0x11",
  "0x12",
  "0x13",
  "0x14",
  "0x15",
  "0x16",
  "0x17",
  "0x18",
  "0x19",
  "0x1A",
  "0x1B",
  "0x1C",
  "0x1D",
  "0x1E",
  "0x1F",
  "KC_SPC",  		// 0x20 // ' '
  "KC_EXLM !", 	// 0x21 // !
  "KC_DQUO \"", 	// 0x22 // "
  "KC_HASH #", 	// 0x23 // #
  "KC_DLR  $", 	// 0x24 // $
  "KC_PERC %", 	// 0x25 // %
  "KC_AMPR &", 	// 0x26 // &
  "KC_QUOT '", 	// 0x27 // '
  "KC_LPRN (", 	// 0x28 // (
  "KC_RPRN )", 	// 0x29 // )
  "KC_ASTR *", 	// 0x2A // *
  "KC_PLUS +", 	// 0x2B // +
  "KC_COMM ,", 	// 0x2C // ,
  "KC_MINS -", 	// 0x2D // -
  "KC_DOT  .", 	// 0x2E // .
  "KC_SLSH /", 	// 0x2F // /
  "KC_0",			// 0x30
  "KC_1",			// 0x31
  "KC_2",			// 0x32
  "KC_3",			// 0x33
  "KC_4",			// 0x34
  "KC_5",			// 0x35
  "KC_6",			// 0x36
  "KC_7",			// 0x37
  "KC_8",			// 0x38
  "KC_9",			// 0x39
  "KC_COLN :", 	// 0x3A // :
  "KC_SCLN ;", 	// 0x3B // ;
  "KC_LABK <", 	// 0x3C // <
  "KC_EQL =", 	// 0x3D // =
  "KC_RABK >", 	// 0x3E // >
  "KC_QUES ?", 	// 0x3F // ?
  "KC_AT @", 		// 0x40 // @
  "KC_A",			// 0x41
  "KC_B",			// 0x42
  "KC_C",			// 0x43
  "KC_D",			// 0x44
  "KC_E",			// 0x45
  "KC_F",			// 0x46
  "KC_G",			// 0x47
  "KC_H",			// 0x48
  "KC_I",			// 0x49
  "KC_J",			// 0x4A
  "KC_K",			// 0x4B
  "KC_L",			// 0x4C
  "KC_M",			// 0x4D
  "KC_N",			// 0x4E
  "KC_O",			// 0x4F
  "KC_P",			// 0x50
  "KC_Q",			// 0x51
  "KC_R",			// 0x52
  "KC_S",			// 0x53
  "KC_T",			// 0x54
  "KC_U",			// 0x55
  "KC_V",			// 0x56
  "KC_W",			// 0x57
  "KC_X",			// 0x58
  "KC_Y",			// 0x59
  "KC_Z",			// 0x5A
  "KC_LBRC [", 	// 0x5B // [
  "KC_BSLS \\", 	// 0x5C // backslash
  "KC_RBRC ]", 	// 0x5D // ]
  "KC_CIRC ^", 	// 0x5E // ^
  "KC_UNDS _", 	// 0x5F // _
  "KC_GRAVE `",  	// 0x60 // `
  "KC_a",			// 0x61
  "KC_b",			// 0x62
  "KC_c",			// 0x63
  "KC_d",			// 0x64
  "KC_e",			// 0x65
  "KC_f",			// 0x66
  "KC_g",			// 0x67
  "KC_h",			// 0x68
  "KC_i",			// 0x69
  "KC_j",			// 0x6A
  "KC_k",			// 0x6B
  "KC_l",			// 0x6C
  "KC_m",			// 0x6D
  "KC_n",			// 0x6E
  "KC_o",			// 0x6F
  "KC_p",			// 0x70
  "KC_q",			// 0x71
  "KC_r",			// 0x72
  "KC_s",			// 0x73
  "KC_t",			// 0x74
  "KC_u",			// 0x75
  "KC_v",			// 0x76
  "KC_w",			// 0x77
  "KC_x",			// 0x78
  "KC_y",			// 0x79
  "KC_z",			// 0x7A
  "KC_LCBR {", 	// 0x7B // {
  "KC_PIPE |", 	// 0x7C // |
  "KC_RCBR }", 	// 0x7D // }
  "KC_TILD ~", 	// 0x7E // ~
  "0x7F", 		// 0x7F //
  "KC_LEFT_CTRL",	// 0x80	//
  "KC_LEFT_SHIFT",// 0x81	//
  "KC_LEFT_ALT",	// 0x82	//
  "KC_LEFT_GUI",	// 0x83	// Windows
  "KC_RIGHT_CTRL",// 0x84	//
  "KC_RIGHT_SHIFT",//0x85	//
  "KC_RIGHT_ALT",	// 0x86	//
  "KC_RIGHT_GUI",	// 0x87	// Windows
  "0x88",
  "0x89",
  "0x8A",
  "0x8B",
  "0x8C",
  "0x8D",
  "0x8E",
  "0x8F",
  "0x90",
  "0x91",
  "0x92",
  "0x93",
  "0x94",
  "0x95",
  "0x96",
  "0x97",
  "0x98",
  "0x99",
  "0x9A",
  "0x9B",
  "0x9C",
  "0x9D",
  "0x9E",
  "0x9F",
  "0xA0",
  "0xA1",
  "0xA2",
  "0xA3",
  "0xA4",
  "0xA5",
  "0xA6",
  "0xA7",
  "0xA8",
  "0xA9",
  "0xAA",
  "0xAB",
  "0xAC",
  "0xAD",
  "0xAE",
  "0xAF",
  "KC_RETURN",		// 0xB0	//
  "KC_ESC",			// 0xB1	//
  "KC_BACKSPACE",		// 0xB2	//
  "KC_TAB",			// 0xB3	//
  "0xB4",
  "0xB5",
  "0xB6",
  "0xB7",
  "0xB8",
  "0xB9",
  "0xBA",
  "0xBB",
  "0xBC",
  "0xBD",
  "0xBE",
  "0xBF",
  "0xC0",
  "KC_CAPS_LOCK",		// 0xC1	//
  "KC_F1",			// 0xC2	//
  "KC_F2",			// 0xC3	//
  "KC_F3",			// 0xC4	//
  "KC_F4",			// 0xC5	//
  "KC_F5",			// 0xC6	//
  "KC_F6",			// 0xC7	//
  "KC_F7",			// 0xC8	//
  "KC_F8",			// 0xC9	//
  "KC_F9",			// 0xCA	//
  "KC_F10",			// 0xCB	//
  "KC_F11",			// 0xCC	//
  "KC_F12",			// 0xCD	//
  "KC_PSCREEN",		// 0xCE // Print fScreen
  "0xCF",
  "0xD0",
  "KC_INSERT",		// 0xD1	//
  "KC_HOME",			// 0xD2	//
  "KC_PAGE_UP",		// 0xD3	//
  "KC_DELETE",		// 0xD4	//
  "KC_END",			// 0xD5	//
  "KC_PAGE_DOWN",		// 0xD6	//
  "KC_RIGHT_ARROW",	// 0xD7	//
  "KC_LEFT_ARROW",	// 0xD8	//
  "KC_DOWN_ARROW",	// 0xD9	//
  "KC_UP_ARROW",	// 0xDA	//
  "0xDB",	// 0xD	//
  "0xDC",	// 0xD	//
  "0xDD",	// 0xD	//
  "0xDE",	// 0xD	//
  "0xDF",	// 0xD	//
  "0xE0",	// 0xE	//
  "0xE1",	// 0xE	//
  "0xE2",	// 0xE	//
  "0xE3",	// 0xE	//
  "0xE4",	// 0xE	//
  "0xE5",	// 0xE	//
  "0xE6",	// 0xE	//
  "0xE7",	// 0xE	//
  "0xE8",	// 0xE	//
  "0xE9",	// 0xE	//
  "0xEA",	// 0xE	//
  "0xEB",	// 0xE	//
  "0xEC",	// 0xE	//
  "KC_APP",	// 0xE	//
  "0xEE",	// 0xE	//
  "0xEF",	// 0xE	//
  "0xF0",	// 0xF	//
  "0xF1",	// 0xF	//
  "0xF2",	// 0xF	//
  "0xF3",	// 0xF	//
  "0xF4",	// 0xF	//
  "0xF5",	// 0xF	//
  "0xF6",	// 0xF	//
  "0xF7",	// 0xF	//
  "0xF8",	// 0xF	//
  "0xF9",	// 0xF	//
  "0xFA",	// 0xF	//
  "0xFB",	// 0xF	//
  "0xFC",	// 0xF	//
  "0xFD",	// 0xF	//
  "0xFE",	// 0xF	//
  "0xFF",	// 0xE	//
};

const char* keycode_to_txt(uint8_t keycode)
{
  return keycodes_txt[keycode];
}
